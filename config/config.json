// json5로 파싱되며, 주석은 자동으로 제거되므로 수동으로 제거할 필요 없음
{
  "feConfigs": {
    "lafEnv": "https://laf.dev" // laf 환경. https://laf.run (항저우 알리 클라우드) 또는 개인화된 laf 환경. Laf openapi 기능을 사용하려면 최신 버전의 laf가 필요함.
  },
  "systemEnv": {
    "vectorMaxProcess": 15, // 최대 벡터 프로세스 수
    "qaMaxProcess": 15, // 최대 QA 프로세스 수
    "pgHNSWEfSearch": 100 // 벡터 검색 파라미터. 값이 클수록 검색이 더 정확하지만 속도가 느려짐. 100으로 설정하면 99% 이상의 정확도.
  },
  "llmModels": [
    {
      "model": "gpt-4o-mini-2024-07-18", // 모델 이름(OneAPI의 채널 모델 이름에 해당)
      "name": "gpt-4o-mini-2024-07-18", // 모델 별명
      "avatar": "/imgs/model/openai.svg", // 모델 로고
      "maxContext": 125000, // 최대 컨텍스트 길이
      "maxResponse": 15000, // 최대 응답 길이
      "quoteMaxToken": 110000, // 최대 인용 내용 길이
      "maxTemperature": 1.0, // 최대 온도 설정. 높은 값일수록 응답의 다양성이 증가함.
      "charsPointsPrice": 0, // n 포인트/1k 토큰 (상업용)
      "censor": false, // 민감성 검증 활성화 여부 (상업용)
      "vision": true, // 이미지 입력 지원 여부
      "datasetProcess": true, // 지식베이스 처리 모델로 설정 여부 (QA). 최소한 하나는 true여야 함, 그렇지 않으면 지식베이스 오류 발생.
      "usedInClassify": true, // 문제 분류에 사용 여부. 최소한 하나는 true여야 함.
      "usedInExtractFields": true, // 내용 추출에 사용 여부. 최소한 하나는 true여야 함.
      "usedInToolCall": true, // 도구 호출에 사용 여부. 최소한 하나는 true여야 함.
      "usedInQueryExtension": true, // 문제 최적화에 사용 여부. 최소한 하나는 true여야 함.
      "toolChoice": true, // 도구 선택 지원 여부 (분류, 내용 추출, 도구 호출에 사용됨. 현재는 gpt만 지원)
      "functionCall": false, // 함수 호출 지원 여부. 도구 선택이 우선 사용됨. false일 경우 함수 호출 사용.
      "customCQPrompt": "", // 사용자 정의 텍스트 분류 프롬프트 (도구 및 함수 호출 모델은 지원하지 않음)
      "customExtractPrompt": "", // 사용자 정의 내용 추출 프롬프트
      "defaultSystemChatPrompt": "", // 대화에 기본적으로 포함되는 시스템 프롬프트
      "defaultConfig": {} // API 요청 시 기본 설정을 포함 (예: GLM4의 top_p)
    },
    {
      "model": "gpt-4o-mini",
      "name": "gpt-4o-mini",
      "avatar": "/imgs/model/openai.svg",
      "maxContext": 125000,
      "maxResponse": 15000,
      "quoteMaxToken": 110000,
      "maxTemperature": 1.0,
      "charsPointsPrice": 0,
      "censor": false,
      "vision": true,
      "datasetProcess": false,
      "usedInClassify": true,
      "usedInExtractFields": true,
      "usedInToolCall": true,
      "usedInQueryExtension": true,
      "toolChoice": true,
      "functionCall": false,
      "customCQPrompt": "",
      "customExtractPrompt": "",
      "defaultSystemChatPrompt": "",
      "defaultConfig": {}
    },
    {
      "model": "gpt-4o-2024-08-06",
      "name": "gpt-4o",
      "avatar": "/imgs/model/openai.svg",
      "maxContext": 125000,
      "maxResponse": 15000,
      "quoteMaxToken": 110000,
      "maxTemperature": 1.0,
      "charsPointsPrice": 0,
      "censor": false,
      "vision": true,
      "datasetProcess": false,
      "usedInClassify": true,
      "usedInExtractFields": true,
      "usedInToolCall": true,
      "usedInQueryExtension": true,
      "toolChoice": true,
      "functionCall": false,
      "customCQPrompt": "",
      "customExtractPrompt": "",
      "defaultSystemChatPrompt": "",
      "defaultConfig": {}
    },
    {
      "model": "claude-3-5-sonnet-20240620",
      "name": "claude-3-5-sonnet",
      "avatar": "/imgs/model/openai.svg",
      "maxContext": 125000,
      "maxResponse": 8000,
      "quoteMaxToken": 115000,
      "maxTemperature": 1.0,
      "charsPointsPrice": 0,
      "censor": false,
      "vision": true,
      "datasetProcess": false,
      "usedInClassify": true,
      "usedInExtractFields": true,
      "usedInToolCall": true,
      "usedInQueryExtension": true,
      "toolChoice": true,
      "functionCall": false,
      "customCQPrompt": "",
      "customExtractPrompt": "",
      "defaultSystemChatPrompt": "",
      "defaultConfig": {}
    },
    {
      "model": "claude-3-haiku-20240307",
      "name": "claude-3-haiku",
      "avatar": "/imgs/model/openai.svg",
      "maxContext": 125000,
      "maxResponse": 4000,
      "quoteMaxToken": 120000,
      "maxTemperature": 1.0,
      "charsPointsPrice": 0,
      "censor": false,
      "vision": true,
      "datasetProcess": false,
      "usedInClassify": true,
      "usedInExtractFields": true,
      "usedInToolCall": true,
      "usedInQueryExtension": true,
      "toolChoice": true,
      "functionCall": false,
      "customCQPrompt": "",
      "customExtractPrompt": "",
      "defaultSystemChatPrompt": "",
      "defaultConfig": {}
    },
    {
      "model": "gemini-1.5-flash-002",
      "name": "gemini-1.5-flash",
      "avatar": "/imgs/model/openai.svg",
      "maxContext": 125000,
      "maxResponse": 8000,
      "quoteMaxToken": 110000,
      "maxTemperature": 1.0,
      "charsPointsPrice": 0,
      "censor": false,
      "vision": true,
      "datasetProcess": false,
      "usedInClassify": true,
      "usedInExtractFields": true,
      "usedInToolCall": true,
      "usedInQueryExtension": true,
      "toolChoice": true,
      "functionCall": false,
      "customCQPrompt": "",
      "customExtractPrompt": "",
      "defaultSystemChatPrompt": "",
      "defaultConfig": {}
    }
  ],
  "vectorModels": [
    {
      "model": "text-embedding-3-large", // 모델 이름 (OneAPI에 해당)
      "name": "text-embedding-3-large", // 모델 표시 이름
      "avatar": "/imgs/model/openai.svg", // 로고
      "charsPointsPrice": 0, // n 포인트/1k 토큰
      "defaultToken": 512, // 기본 텍스트 분할 시의 토큰 수
      "maxToken": 3000, // 최대 토큰 수
      "weight": 100, // 우선 훈련 가중치
      "defaultConfig": {
        "dimensions": 1024 // 벡터 차원 수
      }, // 사용자 정의 추가 파라미터. 예를 들어, embedding3-large를 사용하려면 dimensions:1024를 전달하여 1024 차원의 벡터를 반환하도록 설정.
      "dbConfig": {}, // 저장 시의 추가 파라미터 (비대칭 벡터 모델에서 필요)
      "queryConfig": {} // 훈련 시의 추가 파라미터
    }
  ],
  "reRankModels": [
    {
      "model": "rerank-multilingual-v3.0",
      "name": "rerank-multi-v3.0",
      "requestUrl": "https://api.cohere.ai/v1/rerank",
      "requestAuth": "API-KEY"
    }
  ], // 재정렬 모델 목록
  "audioSpeechModels": [
    {
      "model": "tts-1", // 텍스트 음성 변환 모델
      "name": "OpenAI TTS1", // 모델 이름
      "charsPointsPrice": 0, // n 포인트/1k 토큰
      "voices": [
        // 지원하는 음성 목록
        { "label": "Alloy", "value": "alloy", "bufferId": "openai-Alloy" },
        { "label": "Echo", "value": "echo", "bufferId": "openai-Echo" },
        { "label": "Fable", "value": "fable", "bufferId": "openai-Fable" },
        { "label": "Onyx", "value": "onyx", "bufferId": "openai-Onyx" },
        { "label": "Nova", "value": "nova", "bufferId": "openai-Nova" },
        { "label": "Shimmer", "value": "shimmer", "bufferId": "openai-Shimmer" }
      ]
    }
  ],
  "whisperModel": {
    "model": "whisper-1", // 음성 인식 모델
    "name": "Whisper1", // 모델 이름
    "charsPointsPrice": 0 // n 포인트/1k 토큰
  }
}
